// Code generated by "stringer -type=LoadCmd -output commands_string.go"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LC_REQ_DYLD-2147483648]
	_ = x[LC_SEGMENT-1]
	_ = x[LC_SYMTAB-2]
	_ = x[LC_SYMSEG-3]
	_ = x[LC_THREAD-4]
	_ = x[LC_UNIXTHREAD-5]
	_ = x[LC_LOADFVMLIB-6]
	_ = x[LC_IDFVMLIB-7]
	_ = x[LC_IDENT-8]
	_ = x[LC_FVMFILE-9]
	_ = x[LC_PREPAGE-10]
	_ = x[LC_DYSYMTAB-11]
	_ = x[LC_LOAD_DYLIB-12]
	_ = x[LC_ID_DYLIB-13]
	_ = x[LC_LOAD_DYLINKER-14]
	_ = x[LC_ID_DYLINKER-15]
	_ = x[LC_PREBOUND_DYLIB-16]
	_ = x[LC_ROUTINES-17]
	_ = x[LC_SUB_FRAMEWORK-18]
	_ = x[LC_SUB_UMBRELLA-19]
	_ = x[LC_SUB_CLIENT-20]
	_ = x[LC_SUB_LIBRARY-21]
	_ = x[LC_TWOLEVEL_HINTS-22]
	_ = x[LC_PREBIND_CKSUM-23]
	_ = x[LC_LOAD_WEAK_DYLIB-2147483672]
	_ = x[LC_SEGMENT_64-25]
	_ = x[LC_ROUTINES_64-26]
	_ = x[LC_UUID-27]
	_ = x[LC_RPATH-2147483676]
	_ = x[LC_CODE_SIGNATURE-29]
	_ = x[LC_SEGMENT_SPLIT_INFO-30]
	_ = x[LC_REEXPORT_DYLIB-2147483679]
	_ = x[LC_LAZY_LOAD_DYLIB-32]
	_ = x[LC_ENCRYPTION_INFO-33]
	_ = x[LC_DYLD_INFO-34]
	_ = x[LC_DYLD_INFO_ONLY-2147483682]
	_ = x[LC_LOAD_UPWARD_DYLIB-2147483683]
	_ = x[LC_VERSION_MIN_MACOSX-36]
	_ = x[LC_VERSION_MIN_IPHONEOS-37]
	_ = x[LC_FUNCTION_STARTS-38]
	_ = x[LC_DYLD_ENVIRONMENT-39]
	_ = x[LC_MAIN-2147483688]
	_ = x[LC_DATA_IN_CODE-41]
	_ = x[LC_SOURCE_VERSION-42]
	_ = x[LC_DYLIB_CODE_SIGN_DRS-43]
	_ = x[LC_ENCRYPTION_INFO_64-44]
	_ = x[LC_LINKER_OPTION-45]
	_ = x[LC_LINKER_OPTIMIZATION_HINT-46]
	_ = x[LC_VERSION_MIN_TVOS-47]
	_ = x[LC_VERSION_MIN_WATCHOS-48]
	_ = x[LC_NOTE-49]
	_ = x[LC_BUILD_VERSION-50]
	_ = x[LC_DYLD_EXPORTS_TRIE-2147483699]
	_ = x[LC_DYLD_CHAINED_FIXUPS-2147483700]
	_ = x[LC_FILESET_ENTRY-2147483701]
}

const _LoadCmd_name = "LC_SEGMENTLC_SYMTABLC_SYMSEGLC_THREADLC_UNIXTHREADLC_LOADFVMLIBLC_IDFVMLIBLC_IDENTLC_FVMFILELC_PREPAGELC_DYSYMTABLC_LOAD_DYLIBLC_ID_DYLIBLC_LOAD_DYLINKERLC_ID_DYLINKERLC_PREBOUND_DYLIBLC_ROUTINESLC_SUB_FRAMEWORKLC_SUB_UMBRELLALC_SUB_CLIENTLC_SUB_LIBRARYLC_TWOLEVEL_HINTSLC_PREBIND_CKSUMLC_SEGMENT_64LC_ROUTINES_64LC_UUIDLC_CODE_SIGNATURELC_SEGMENT_SPLIT_INFOLC_LAZY_LOAD_DYLIBLC_ENCRYPTION_INFOLC_DYLD_INFOLC_VERSION_MIN_MACOSXLC_VERSION_MIN_IPHONEOSLC_FUNCTION_STARTSLC_DYLD_ENVIRONMENTLC_DATA_IN_CODELC_SOURCE_VERSIONLC_DYLIB_CODE_SIGN_DRSLC_ENCRYPTION_INFO_64LC_LINKER_OPTIONLC_LINKER_OPTIMIZATION_HINTLC_VERSION_MIN_TVOSLC_VERSION_MIN_WATCHOSLC_NOTELC_BUILD_VERSIONLC_REQ_DYLDLC_LOAD_WEAK_DYLIBLC_RPATHLC_REEXPORT_DYLIBLC_DYLD_INFO_ONLYLC_LOAD_UPWARD_DYLIBLC_MAINLC_DYLD_EXPORTS_TRIELC_DYLD_CHAINED_FIXUPSLC_FILESET_ENTRY"

var _LoadCmd_map = map[LoadCmd]string{
	1:          _LoadCmd_name[0:10],
	2:          _LoadCmd_name[10:19],
	3:          _LoadCmd_name[19:28],
	4:          _LoadCmd_name[28:37],
	5:          _LoadCmd_name[37:50],
	6:          _LoadCmd_name[50:63],
	7:          _LoadCmd_name[63:74],
	8:          _LoadCmd_name[74:82],
	9:          _LoadCmd_name[82:92],
	10:         _LoadCmd_name[92:102],
	11:         _LoadCmd_name[102:113],
	12:         _LoadCmd_name[113:126],
	13:         _LoadCmd_name[126:137],
	14:         _LoadCmd_name[137:153],
	15:         _LoadCmd_name[153:167],
	16:         _LoadCmd_name[167:184],
	17:         _LoadCmd_name[184:195],
	18:         _LoadCmd_name[195:211],
	19:         _LoadCmd_name[211:226],
	20:         _LoadCmd_name[226:239],
	21:         _LoadCmd_name[239:253],
	22:         _LoadCmd_name[253:270],
	23:         _LoadCmd_name[270:286],
	25:         _LoadCmd_name[286:299],
	26:         _LoadCmd_name[299:313],
	27:         _LoadCmd_name[313:320],
	29:         _LoadCmd_name[320:337],
	30:         _LoadCmd_name[337:358],
	32:         _LoadCmd_name[358:376],
	33:         _LoadCmd_name[376:394],
	34:         _LoadCmd_name[394:406],
	36:         _LoadCmd_name[406:427],
	37:         _LoadCmd_name[427:450],
	38:         _LoadCmd_name[450:468],
	39:         _LoadCmd_name[468:487],
	41:         _LoadCmd_name[487:502],
	42:         _LoadCmd_name[502:519],
	43:         _LoadCmd_name[519:541],
	44:         _LoadCmd_name[541:562],
	45:         _LoadCmd_name[562:578],
	46:         _LoadCmd_name[578:605],
	47:         _LoadCmd_name[605:624],
	48:         _LoadCmd_name[624:646],
	49:         _LoadCmd_name[646:653],
	50:         _LoadCmd_name[653:669],
	2147483648: _LoadCmd_name[669:680],
	2147483672: _LoadCmd_name[680:698],
	2147483676: _LoadCmd_name[698:706],
	2147483679: _LoadCmd_name[706:723],
	2147483682: _LoadCmd_name[723:740],
	2147483683: _LoadCmd_name[740:760],
	2147483688: _LoadCmd_name[760:767],
	2147483699: _LoadCmd_name[767:787],
	2147483700: _LoadCmd_name[787:809],
	2147483701: _LoadCmd_name[809:825],
}

func (i LoadCmd) String() string {
	if str, ok := _LoadCmd_map[i]; ok {
		return str
	}
	return "LoadCmd(" + strconv.FormatInt(int64(i), 10) + ")"
}
