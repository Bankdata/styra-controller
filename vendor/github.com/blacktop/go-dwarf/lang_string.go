// Code generated by "stringer -type lang -trimprefix=Lang"; DO NOT EDIT.

package dwarf

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LangC89-1]
	_ = x[LangC-2]
	_ = x[LangAda83-3]
	_ = x[LangCPlusPlus-4]
	_ = x[LangCobol74-5]
	_ = x[LangCobol85-6]
	_ = x[LangFortran77-7]
	_ = x[LangFortran90-8]
	_ = x[LangPascal83-9]
	_ = x[LangModula2-10]
	_ = x[LangJava-11]
	_ = x[LangC99-12]
	_ = x[LangAda95-13]
	_ = x[LangFortran95-14]
	_ = x[LangPli-15]
	_ = x[LangObjC-16]
	_ = x[LangObjCPlusPlus-17]
	_ = x[LangUpc-18]
	_ = x[LangD-19]
	_ = x[LangPython-20]
	_ = x[LangOpenCl-21]
	_ = x[LangGo-22]
	_ = x[LangModula3-23]
	_ = x[LangHaskell-24]
	_ = x[LangCPlusPlus_03-25]
	_ = x[LangCPlusPlus_11-26]
	_ = x[LangOCaml-27]
	_ = x[LangRust-28]
	_ = x[LangC11-29]
	_ = x[LangSwift-30]
	_ = x[LangJulia-31]
	_ = x[LangDylan-32]
	_ = x[LangCPlusPlus_14-33]
	_ = x[LangFortran03-34]
	_ = x[LangFortran08-35]
	_ = x[LangRenderScript-36]
	_ = x[LangBliss-37]
	_ = x[LangKotlin-38]
	_ = x[LangZig-39]
	_ = x[LangCrystal-40]
	_ = x[LangCPlusPlus_17-42]
	_ = x[LangCPlusPlus_20-43]
	_ = x[LangC17-44]
	_ = x[LangFortran18-45]
	_ = x[LangAda2005-46]
	_ = x[LangAda2012-47]
	_ = x[LangMipsAssembler-32769]
	_ = x[LangGoogleRenderScript-36439]
	_ = x[LangSunAssembler-36865]
	_ = x[LangAltiumAssembler-37121]
	_ = x[LangBorlandDelphi-45056]
}

const (
	_lang_name_0 = "C89CAda83CPlusPlusCobol74Cobol85Fortran77Fortran90Pascal83Modula2JavaC99Ada95Fortran95PliObjCObjCPlusPlusUpcDPythonOpenClGoModula3HaskellCPlusPlus_03CPlusPlus_11OCamlRustC11SwiftJuliaDylanCPlusPlus_14Fortran03Fortran08RenderScriptBlissKotlinZigCrystal"
	_lang_name_1 = "CPlusPlus_17CPlusPlus_20C17Fortran18Ada2005Ada2012"
	_lang_name_2 = "MipsAssembler"
	_lang_name_3 = "GoogleRenderScript"
	_lang_name_4 = "SunAssembler"
	_lang_name_5 = "AltiumAssembler"
	_lang_name_6 = "BorlandDelphi"
)

var (
	_lang_index_0 = [...]uint8{0, 3, 4, 9, 18, 25, 32, 41, 50, 58, 65, 69, 72, 77, 86, 89, 93, 105, 108, 109, 115, 121, 123, 130, 137, 149, 161, 166, 170, 173, 178, 183, 188, 200, 209, 218, 230, 235, 241, 244, 251}
	_lang_index_1 = [...]uint8{0, 12, 24, 27, 36, 43, 50}
)

func (i lang) String() string {
	switch {
	case 1 <= i && i <= 40:
		i -= 1
		return _lang_name_0[_lang_index_0[i]:_lang_index_0[i+1]]
	case 42 <= i && i <= 47:
		i -= 42
		return _lang_name_1[_lang_index_1[i]:_lang_index_1[i+1]]
	case i == 32769:
		return _lang_name_2
	case i == 36439:
		return _lang_name_3
	case i == 36865:
		return _lang_name_4
	case i == 37121:
		return _lang_name_5
	case i == 45056:
		return _lang_name_6
	default:
		return "lang(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
